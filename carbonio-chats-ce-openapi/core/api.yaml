openapi: 3.0.3
info:
  title: Chats Api
  description: Chats HTTP APIs definition.
  version: 0.1.2
  contact:
    email: smokybeans@zextras.com
servers:
  - url: https://zextras.com/zx/chats
tags:
  - name: Rooms
  - name: Members
  - name: Users
  - name: Attachments
  - name: Operations
paths:
  /healthcheck:
    get:
      tags:
        - Operations
      summary: healthcheck endpoint which will answer according to the service state
      operationId: healthcheck
      responses:
        200:
          $ref: '#/components/responses/Healthcheck200'
  /rooms:
    get:
      tags:
        - Rooms
      summary: Retrieves a list of every room the user has access to
      operationId: getRooms
      responses:
        200:
          $ref: '#/components/responses/GetRooms200'
    post:
      tags:
        - Rooms
      summary: Creates a room of the specified type
      operationId: createRoom
      requestBody:
        description: room to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomCreationFields'
      responses:
        201:
          $ref: '#/components/responses/CreateRoom201'
        403:
          $ref: '#/components/responses/Forbidden'
        400:
          $ref: '#/components/responses/BadRequest'
  /rooms/{roomId}:
    get:
      tags:
        - Rooms
      summary: Retrieves the requested room
      operationId: getRoomById
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/GetRoomById200'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - Rooms
      summary: Updates a room information
      operationId: updateRoom
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      requestBody:
        description: room fields to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomEditableFields'
      responses:
        200:
          $ref: '#/components/responses/UpdateRoom200'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Rooms
      summary: Deletes the specified room
      operationId: deleteRoom
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/DeleteRoom204'
        403:
          $ref: '#/components/responses/Forbidden'
  /rooms/{roomId}/picture:
    post:
      tags:
        - Rooms
      summary: Uploads and sets a new room picture
      operationId: setRoomPicture
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      requestBody:
        description: image to set
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        204:
          $ref: '#/components/responses/SetRoomPicture204'
  /rooms/{roomId}/mute:
    put:
      tags:
        - Rooms
      summary: Mutes notification for the specified room
      operationId: muteRoom
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/MuteRoom204'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Rooms
      summary: Unmutes notification for the specified room
      operationId: unmuteRoom
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/UnmuteRoom204'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  /rooms/{roomId}/hash:
    put:
      tags:
        - Rooms
      summary: Resets the specified room hash
      operationId: resetRoomHash
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/ResetRoomHash200'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  /rooms/{roomId}/members:
    get:
      tags:
        - Rooms
        - Members
      summary: Retrieves every member to the given room
      operationId: getRoomMembers
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/GetRoomMembers200'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - Rooms
        - Members
      summary: Adds or invites the specified user to the room
      description: |
        Adds the specified user to the room. This can only be performed by an of the given room
      operationId: addRoomMember
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      requestBody:
        description: member to add or invite
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        201:
          $ref: '#/components/responses/AddRoomMember200'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
  /rooms/{roomId}/members/{userId}:
    delete:
      tags:
        - Rooms
        - Members
      summary: Removes a member from the room
      description: |
        Removes a member from the specified room. If the specified user is different from
        the requester, this action is considered as a kick
      operationId: removeRoomMember
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
        - in: path
          name: userId
          description: user identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/RemoveRoomMember204'
        403:
          $ref: '#/components/responses/Forbidden'
  /rooms/{roomId}/members/{userId}/owner:
    put:
      tags:
        - Members
      summary: Promotes a member to owner
      operationId: addOwner
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
        - in: path
          name: userId
          description: user identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/AddOwner204'
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
    delete:
      tags:
        - Members
      summary: Demotes a member from owner to normal member
      operationId: removeOwner
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
        - in: path
          name: userId
          description: user identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/RemoveOwner204'
        404:
          $ref: '#/components/responses/NotFound'
        403:
          $ref: '#/components/responses/Forbidden'
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Retrieves a user
      operationId: getUserById
      parameters:
        - in: path
          name: userId
          description: user identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/GetUserById200'
        404:
          $ref: '#/components/responses/NotFound'

  /rooms/{roomId}/attachments:
    post:
      tags:
        - Attachments
      summary: Uploads a new attachment
      operationId: addAttachment
      parameters:
        - in: path
          name: roomId
          description: room identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
        - in: header
          name: X-Content-Disposition
          description: file content type and file name writes with inline format ('fileName=<>;mimeType=<>')
          schema:
            type: string
          required: true
      requestBody:
        description: file stream
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        201:
          $ref: '#/components/responses/UploadAttachment201'
        413:
          $ref: '#/components/responses/PayloadTooLarge'
  /attachments/{fileId}:
    delete:
      tags:
        - Attachments
      summary: Deletes an uploaded attachment
      operationId: deleteAttachment
      parameters:
        - in: path
          name: fileId
          description: file identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        204:
          $ref: '#/components/responses/DeleteAttachment204'
        403:
          $ref: '#/components/responses/Forbidden'
    get:
      tags:
        - Attachments
      summary: Retrieves info related to an uploaded attachment
      operationId: getAttachmentInfo
      parameters:
        - in: path
          name: fileId
          description: file identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/GetAttachmentInfo200'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  /attachments/{fileId}/download:
    get:
      tags:
        - Attachments
      summary: Retrieves an uploaded attachment
      operationId: getAttachment
      parameters:
        - in: path
          name: fileId
          description: file identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/GetAttachment200'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
  /attachments/{fileId}/preview:
    get:
      tags:
        - Attachments
      summary: Retrieves the prefiew of an uploaded attachment
      operationId: getAttachmentPreview
      parameters:
        - in: path
          name: fileId
          description: file identifier
          schema:
            type: string
            format: uuid
          required: true
          allowEmptyValue: false
      responses:
        200:
          $ref: '#/components/responses/GetAttachmentPreview200'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
components:
  responses:
    Healthcheck200:
      description: Everything is operational
    GetRooms200:
      description: List of every room that the user has access to
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Room'
    CreateRoom201:
      description: The newly created room
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomInfo'
    GetRoomById200:
      description: Requested room
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomInfo'
    UpdateRoom200:
      description: Updated room
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Room'
    DeleteRoom204:
      description: Room was deleted correctly or it never existed
    SetRoomPicture204:
      description: Room picture was changed correctly
    MuteRoom204:
      description: Room was muted correctly
    UnmuteRoom204:
      description: Room was unmuted correctly
    ResetRoomHash200:
      description: Room's hash
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hash'
    GetRoomMembers200:
      description: The room members list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Member'
    AddRoomMember200:
      description: The member added or invited
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Member'
    RemoveRoomMember204:
      description: The member was deleted correctly or it never existed
    AddOwner204:
      description: The member was promoted
    RemoveOwner204:
      description: The member was demoted
    GetUserById200:
      description: Requested user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    UploadAttachment201:
      description: File identifier
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Id'
    DeleteAttachment204:
      description: The file was deleted correctly
    GetAttachmentInfo200:
      description: Attachment informations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment'
    GetAttachment200:
      description: The requested file
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    GetAttachmentPreview200:
      description: The requested file preview
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    NotFound:
      description: The requested resource was not found
    Forbidden:
      description: The requester could not access the resource
    BadRequest:
      description: The request had wrong or missing parameters
    PayloadTooLarge:
      description: The request had a payload that was too big
  schemas:
    Id:
      type: object
      description: Identifier object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: identifier
      required: [ id ]
    Hash:
      type: object
      description: Hash object
      properties:
        hash:
          type: string
          description: hash
      required: [ hash ]
    User:
      type: object
      description: User data
      properties:
        email:
          type: string
          format: email
          readOnly: true
          description: user's email
        name:
          type: string
          readOnly: true
          description: user's name
      required: [ email, name ]
    RoomType:
      type: object
      description: Managed room types
      enum: [ Group, OneToOne ]
    RoomEditableFields:
      type: object
      description: Room fields that can be updated
      properties:
        name:
          type: string
          description: room name
        description:
          type: string
          description: room description
      required: [ name, description ]
    RoomCreationFields:
      type: object
      description: Room fields for its creation
      allOf:
        - $ref: '#/components/schemas/RoomEditableFields'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/RoomType'
      properties:
        membersIds:
          type: array
          items:
            type: string
          minItems: 2
          description: members identifiers list to be subscribed to the room
      required: [ type, membersIds ]
    Room:
      type: object
      description: Room data
      allOf:
        - $ref: '#/components/schemas/RoomCreationFields'
        - type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
              description: room identifier
            hash:
              type: string
              readOnly: true
              description: an hash that can be used to compose the room's link
            password:
              type: string
              readOnly: true
              description: password to room access
            createdAt:
              type: string
              format: date-time
              readOnly: true
              description: creation date
            updatedAt:
              type: string
              format: date-time
              readOnly: true
              description: update date
      required: [ id, hash, createdAt, updatedAt ]
    RoomInfo:
      description: Room data with members list and current user settings
      type: object
      allOf:
        - $ref: '#/components/schemas/Room'
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
          description: list of users subscribed to the room
        userSettings:
          $ref: '#/components/schemas/RoomUserSettings'
      required: [ members, userSettings ]
    RoomUserSettings:
      type: object
      description: Preferences that an user has set for a room
      properties:
        muted:
          type: boolean
          description: indicates whether the user has muted
      required: [ muted ]
    Member:
      type: object
      description: Information about a user's role in the room
      properties:
        userId:
          type: string
          format: uuid
          description: user identifier
        owner:
          type: boolean
          default: false
          description: indicates whether it is the owner
        temporary:
          type: boolean
          default: false
          readOnly: true
          description: indicates whether it is temporary
        external:
          type: boolean
          default: false
          readOnly: true
          description: indicates whether it is enternal user
      required: [ userId, owner, temporary, external ]
    Attachment:
      type: object
      description: Attachment of a message
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: identifier
        name:
          type: string
          description: file name
        size:
          type: integer
          format: int64
          readOnly: true
          description: file length
        mimeType:
          type: string
          readOnly: true
          description: mime type
        userId:
          type: string
          format: uuid
          readOnly: true
          description: identifier of updated user
        roomId:
          type: string
          format: uuid
          readOnly: true
          description: identifier of destination room
      required: [ id, name, size, mimeType, userId, roomId ]