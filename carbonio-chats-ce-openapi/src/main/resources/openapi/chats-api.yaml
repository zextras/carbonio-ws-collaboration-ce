# SPDX-FileCopyrightText: 2022 2021 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: AGPL-3.0-only

openapi: 3.0.3
info:
  title: Zextras Carbonio Chats CE Api
  description: Zextras Carbonio Chats CE HTTP APIs definition.
  version: 0.1.1
  contact:
    email: smokybeans@zextras.com
servers:
  - url: http://localhost:10000/chats
tags:
  - name: Rooms
  - name: Members
  - name: Users
  - name: Attachments
  - name: Health
paths:
  /health:
    get:
      tags:
        - Health
      summary: Returns the general service status
      operationId: getHealthStatus
      responses:
        200:
          $ref: '#/components/responses/200HealthStatusResponse'
  /health/live:
    get:
      tags:
        - Health
      summary: Returns 204 if the service is alive
      operationId: isLive
      responses:
        204:
          $ref: '#/components/responses/204IsLiveResponse'
  /health/ready:
    get:
      tags:
        - Health
      summary: Returns 204 if the service is ready to receive requests
      operationId: isReady
      responses:
        204:
          $ref: '#/components/responses/204IsReadyResponse'
        500:
          $ref: '#/components/responses/500IsReadyResponse'
  /rooms:
    get:
      tags:
        - Rooms
      summary: Retrieves a list of every room the user has access to
      operationId: listRoom
      responses:
        200:
          $ref: '#/components/responses/200ListRoomResponse'
    post:
      tags:
        - Rooms
      summary: Insert a room of the specified type
      operationId: insertRoom
      requestBody:
        $ref: '#/components/requestBodies/InsertRoomRequest'
      responses:
        201:
          $ref: '#/components/responses/201InsertRoomResponse'
        400:
          $ref: '#/components/responses/400BadRequestResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
  /rooms/{roomId}:
    get:
      tags:
        - Rooms
      summary: Retrieves the requested room
      operationId: getRoom
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        200:
          $ref: '#/components/responses/200GetRoomResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
    put:
      tags:
        - Rooms
      summary: Updates a room information
      operationId: updateRoom
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRoomRequest'
      responses:
        200:
          $ref: '#/components/responses/200UpdateRoomResponse'
        400:
          $ref: '#/components/responses/400BadRequestResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      tags:
        - Rooms
      summary: Deletes the specified room
      operationId: deleteRoom
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        204:
          $ref: '#/components/responses/204DeleteRoomResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
  /rooms/{roomId}/picture:
    get:
      tags:
        - Rooms
      summary: Retrieves the room picture
      operationId: getRoomPicture
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        200:
          $ref: '#/components/responses/200GetRoomPictureResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
    put:
      tags:
        - Rooms
      summary: Uploads and sets a new room picture
      operationId: updateRoomPicture
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
        - $ref: '#/components/parameters/headerXContentDisposition'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRoomPictureRequest'
      responses:
        204:
          $ref: '#/components/responses/204UpdateRoomPictureResponse'
  /rooms/{roomId}/mute:
    put:
      tags:
        - Rooms
      summary: Mutes notification for the specified room
      operationId: muteRoom
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        204:
          $ref: '#/components/responses/204MuteRoomResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
    delete:
      tags:
        - Rooms
      summary: Unmutes notification for the specified room
      operationId: unmuteRoom
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        204:
          $ref: '#/components/responses/204UnmuteRoomResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
  /rooms/{roomId}/hash:
    put:
      tags:
        - Rooms
      summary: Resets the specified room hash
      operationId: resetRoomHash
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        200:
          $ref: '#/components/responses/200ResetRoomHashResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
  /rooms/{roomId}/members:
    get:
      tags:
        - Rooms
        - Members
      summary: Retrieves every member to the given room
      operationId: listRoomMember
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      responses:
        200:
          $ref: '#/components/responses/200ListRoomMemberResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
    post:
      tags:
        - Rooms
        - Members
      summary: Adds or invites the specified user to the room
      description: |
        Adds the specified user to the room. This can only be performed by an of the given room
      operationId: insertRoomMember
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
      requestBody:
        $ref: '#/components/requestBodies/InsertRoomMemberRequest'
      responses:
        201:
          $ref: '#/components/responses/200InsertRoomMemberResponse'
        400:
          $ref: '#/components/responses/400BadRequestResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
  /rooms/{roomId}/members/{userId}:
    delete:
      tags:
        - Rooms
        - Members
      summary: Removes a member from the room
      description: |
        Removes a member from the specified room. If the specified user is different from
        the requester, this action is considered as a kick
      operationId: deleteRoomMember
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
        - $ref: '#/components/parameters/pathUserId'
      responses:
        204:
          $ref: '#/components/responses/204DeleteRoomMemberResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
  /rooms/{roomId}/members/{userId}/owner:
    put:
      tags:
        - Members
      summary: Promotes a member to owner
      operationId: updateToOwner
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
        - $ref: '#/components/parameters/pathUserId'
      responses:
        204:
          $ref: '#/components/responses/204UpdateToOwnerResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
    delete:
      tags:
        - Members
      summary: Demotes a member from owner to normal member
      operationId: deleteOwner
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
        - $ref: '#/components/parameters/pathUserId'
      responses:
        204:
          $ref: '#/components/responses/204DeleteOwnerResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Retrieves a user
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/pathUserId'
      responses:
        200:
          $ref: '#/components/responses/200GetUserResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
  /rooms/{roomId}/attachments:
    post:
      tags:
        - Attachments
      summary: Insert an attachment
      operationId: insertAttachment
      parameters:
        - $ref: '#/components/parameters/pathRoomId'
        - $ref: '#/components/parameters/headerXContentDisposition'
      requestBody:
        $ref: '#/components/requestBodies/InsertAttachmentRequest'
      responses:
        201:
          $ref: '#/components/responses/201InsertAttachmentResponse'
        413:
          $ref: '#/components/responses/413PayloadTooLargeResponse'
  /attachments/{fileId}:
    delete:
      tags:
        - Attachments
      summary: Deletes an uploaded attachment
      operationId: deleteAttachment
      parameters:
        - $ref: '#/components/parameters/pathFileId'
      responses:
        204:
          $ref: '#/components/responses/204DeleteAttachmentResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
    get:
      tags:
        - Attachments
      summary: Retrieves info related to an uploaded attachment
      operationId: getAttachmentInfo
      parameters:
        - $ref: '#/components/parameters/pathFileId'
      responses:
        200:
          $ref: '#/components/responses/200GetAttachmentInfoResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
  /attachments/{fileId}/download:
    get:
      tags:
        - Attachments
      summary: Retrieves an uploaded attachment
      operationId: getAttachment
      parameters:
        - $ref: '#/components/parameters/pathFileId'
      responses:
        200:
          $ref: '#/components/responses/200GetAttachmentResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
  /attachments/{fileId}/preview:
    get:
      tags:
        - Attachments
      summary: Retrieves the prefiew of an uploaded attachment
      operationId: getAttachmentPreview
      parameters:
        - $ref: '#/components/parameters/pathFileId'
      responses:
        200:
          $ref: '#/components/responses/200GetAttachmentPreviewResponse'
        403:
          $ref: '#/components/responses/403ForbiddenResponse'
        404:
          $ref: '#/components/responses/404NotFoundResponse'
components:
  parameters:
    pathRoomId:
      in: path
      name: roomId
      description: room identifier
      schema:
        type: string
        format: uuid
      required: true
      allowEmptyValue: false
    pathFileId:
      in: path
      name: fileId
      description: file identifier
      schema:
        type: string
        format: uuid
      required: true
      allowEmptyValue: false
    pathUserId:
      in: path
      name: userId
      description: user identifier
      schema:
        type: string
        format: uuid
      required: true
      allowEmptyValue: false
    headerXContentDisposition:
      in: header
      name: X-Content-Disposition
      description: file content type and file name writes with inline format ('fileName=<>;mimeType=<>')
      schema:
        type: string
      required: true
      allowEmptyValue: false
  requestBodies:
    InsertRoomRequest:
      description: room to insert
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomCreationFields'
    UpdateRoomRequest:
      description: room fields to update
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomEditableFields'
    UpdateRoomPictureRequest:
      description: image to set
      required: true
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    InsertRoomMemberRequest:
      description: member to add or invite
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Member'
    InsertAttachmentRequest:
      description: file stream
      required: true
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
  responses:
    200HealthStatusResponse:
      description: General status of the service and its dependencies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HealthStatus'
    204IsLiveResponse:
      description: The service is alive
    204IsReadyResponse:
      description: The service is ready to receive requests
    500IsReadyResponse:
      description: The service is not yet ready to receive requests
    200ListRoomResponse:
      description: List of every room that the user has access to
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Room'
    201InsertRoomResponse:
      description: The newly created room
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomInfo'
    200GetRoomResponse:
      description: Requested room
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoomInfo'
    200UpdateRoomResponse:
      description: Updated room
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Room'
    204DeleteRoomResponse:
      description: Room was deleted correctly or it never existed
    200GetRoomPictureResponse:
      description: The requested picture
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    204UpdateRoomPictureResponse:
      description: Room picture was changed correctly
    204MuteRoomResponse:
      description: Room was muted correctly
    204UnmuteRoomResponse:
      description: Room was unmuted correctly
    200ResetRoomHashResponse:
      description: Room's hash
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hash'
    200ListRoomMemberResponse:
      description: The room members list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Member'
    200InsertRoomMemberResponse:
      description: The member added or invited
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Member'
    204DeleteRoomMemberResponse:
      description: The member was deleted correctly or it never existed
    204UpdateToOwnerResponse:
      description: The member was promoted
    204DeleteOwnerResponse:
      description: The member was demoted
    200GetUserResponse:
      description: Requested user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    201InsertAttachmentResponse:
      description: File identifier
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Id'
    204DeleteAttachmentResponse:
      description: The file was deleted correctly
    200GetAttachmentInfoResponse:
      description: Attachment informations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Attachment'
    200GetAttachmentResponse:
      description: The requested file
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    200GetAttachmentPreviewResponse:
      description: The requested file preview
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    404NotFoundResponse:
      description: The requested resource was not found
    403ForbiddenResponse:
      description: The requester could not access the resource
    400BadRequestResponse:
      description: The request had wrong or missing parameters
    413PayloadTooLargeResponse:
      description: The request had a payload that was too big
  schemas:
    HealthStatus:
      type: object
      description: Health status of the service and its dependencies
      properties:
        isLive:
          type: boolean
          description: describes if the service is alive
          readOnly: true
        isReady:
          type: boolean
          description: describes if the service is ready to accept requests
          readOnly: true
        dependencies:
          type: array
          description: health of this service dependencies
          items:
            $ref: '#/components/schemas/DependencyHealth'
    DependencyHealth:
      type: object
      description: Health status of a service dependency
      properties:
        name:
          $ref: '#/components/schemas/DependencyHealthType'
        isHealthy:
          type: boolean
          description: whether the dependency is available and operative
          readOnly: true
    DependencyHealthType:
      type: string
      description: Health dependency types
      enum:
        - database
        - xmpp_server
        - event_dispatcher
        - storage_service
    Id:
      type: object
      description: Identifier object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: identifier
      required: [ id ]
    Hash:
      type: object
      description: Hash object
      properties:
        hash:
          type: string
          description: hash
      required: [ hash ]
    User:
      type: object
      description: User data
      properties:
        email:
          type: string
          format: email
          readOnly: true
          description: user's email
        name:
          type: string
          readOnly: true
          description: user's name
      required: [ email, name ]
    RoomType:
      type: string
      description: Managed room types
      enum:
        - group
        - one_to_one
    RoomEditableFields:
      type: object
      description: Room fields that can be updated
      properties:
        name:
          type: string
          description: room name
        description:
          type: string
          description: room description
      required: [ name, description ]
    RoomCreationFields:
      type: object
      description: Room fields for its creation
      allOf:
        - $ref: '#/components/schemas/RoomEditableFields'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/RoomType'
      properties:
        membersIds:
          type: array
          items:
            type: string
            format: uuid
          minItems: 2
          description: members identifiers list to be subscribed to the room
      required: [ type, membersIds ]
    Room:
      type: object
      description: Room data
      allOf:
        - $ref: '#/components/schemas/RoomCreationFields'
        - type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
              description: room identifier
            hash:
              type: string
              readOnly: true
              description: an hash that can be used to compose the room's link
            password:
              type: string
              readOnly: true
              description: password to room access
            createdAt:
              type: string
              format: date-time
              readOnly: true
              description: creation date
            updatedAt:
              type: string
              format: date-time
              readOnly: true
              description: update date
      required: [ id, hash, createdAt, updatedAt ]
    RoomInfo:
      description: Room data with members list and current user settings
      type: object
      allOf:
        - $ref: '#/components/schemas/Room'
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
          description: list of users subscribed to the room
        userSettings:
          $ref: '#/components/schemas/RoomUserSettings'
      required: [ members, userSettings ]
    RoomUserSettings:
      type: object
      description: Preferences that an user has set for a room
      properties:
        muted:
          type: boolean
          description: indicates whether the user has muted
      required: [ muted ]
    Member:
      type: object
      description: Information about a user's role in the room
      properties:
        userId:
          type: string
          format: uuid
          description: user identifier
        owner:
          type: boolean
          default: false
          description: indicates whether it is the owner
        temporary:
          type: boolean
          default: false
          readOnly: true
          description: indicates whether it is temporary
        external:
          type: boolean
          default: false
          readOnly: true
          description: indicates whether it is enternal user
      required: [ userId, owner, temporary, external ]
    Attachment:
      type: object
      description: Attachment of a message
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: identifier
        name:
          type: string
          description: file name
        size:
          type: integer
          format: int64
          readOnly: true
          description: file length
        mimeType:
          type: string
          readOnly: true
          description: mime type
        userId:
          type: string
          format: uuid
          readOnly: true
          description: identifier of updated user
        roomId:
          type: string
          format: uuid
          readOnly: true
          description: identifier of destination room
      required: [ id, name, size, mimeType, userId, roomId ]